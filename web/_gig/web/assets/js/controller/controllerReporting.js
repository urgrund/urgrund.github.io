
app.controller('Reporting', function ($scope, $http, $rootScope, $timeout, uiGridExporterService, uiGridExporterConstants) {


    // Details needed to 
    // send to server
    $scope.reportGenStartDate;
    $scope.reportGenEndDate;
    $scope.reportGenStartShift;
    $scope.reportGenEndShift;
    $scope.reportSQLFile;

    // List of available reports
    $scope.availableReports;

    // Message for when there is no result
    $scope.noResult = true;
    $scope.noResultMsg = '<h3><i class="fas fa-info-circle"></i> Click on a report file to view results...</h3>';


    $scope.gridOptions = {};

    // $scope.gridOptions = {
    //     enableGridMenu: true,
    //     exporterMenuCsv: true,
    //     //exporterMenuPdf: false,
    //     enableColumnResizing: true,
    //     //enableColumnMenus: false,
    //     enableAutoFitColumns: true,

    //     // columnDefs: [
    //     //     { field: 'firstName', cellClass: 'rCell' },
    //     //     { field: 'lastName', cellClass: 'rCell' },
    //     //     { field: 'company', cellClass: 'rCell' },
    //     //     { field: 'employed', cellClass: function () { return 'rCell'; } }
    //     // ],


    //     gridMenuCustomItems: [{
    //         title: 'Export to CSV',
    //         action: function () {
    //             $scope.export('csv');
    //         },
    //         order: 210
    //     }, {
    //         title: 'Export to PDF',
    //         action: function () {
    //             $scope.export('pdf');
    //         },
    //         order: 250
    //     }],
    //     // enableFiltering: true,
    //     // paginationPageSizes: [8, 16, 24],
    //     // paginationPageSize: 8,
    //     exporterCsvFilename: 'new_data_file',
    //     exporterExcelFilename: 'new_data_file',
    //     onRegisterApi: function (gridApi) {
    //         $scope.gridApi = gridApi;
    //     }
    // };



    $scope.gridOptions = {

        // columnDefs: [
        //     { field: 'firstName', cellClass: 'rCell' },
        //     { field: 'lastName', cellClass: 'rCell' },
        //     { field: 'company', cellClass: 'rCell' },
        //     { field: 'employed', cellClass: function () { return 'rCell'; } }
        // ],

        enableColumnResizing: true,
        enableAutoFitColumns: true,

        enableGridMenu: true,
        enableSelectAll: true,
        exporterCsvFilename: $scope.reportSQLFile,
        exporterPdfDefaultStyle: { fontSize: 9 },
        //exporterPdfTableStyle: { margin: [30, 30, 30, 30] },
        exporterPdfTableHeaderStyle: { fontSize: 10, bold: true, italics: true, color: 'red' },
        exporterPdfHeader: { text: "My Header", style: 'headerStyle' },
        exporterPdfFooter: function (currentPage, pageCount) {
            return {
                text: currentPage.toString()
                    + ' of ' + pageCount.toString()
                    + ' Report generated by Mine-Mage', style: 'footerStyle'
            };
        },
        exporterPdfCustomFormatter: function (docDefinition) {
            docDefinition.styles.headerStyle = { fontSize: 22, bold: true };
            docDefinition.styles.footerStyle = { fontSize: 10, bold: true };
            return docDefinition;
        },
        exporterPdfOrientation: 'portrait',
        exporterPdfPageSize: 'LETTER',
        exporterPdfMaxGridWidth: 500,
        exporterCsvLinkElement: angular.element(document.querySelectorAll(".custom-csv-link-location")),
        exporterExcelFilename: 'asdasdsad.xlsx',
        exporterExcelSheetName: 'Sheet1',
        onRegisterApi: function (gridApi) {
            $scope.gridApi = gridApi;
        }
    };









    // $scope.gridOptions.data = [
    //     {
    //         firstName: "Cox",
    //         lastName: "Carney",
    //         company: "Enormo",
    //         employed: true
    //     },
    //     {
    //         firstName: "Lorraine",
    //         lastName: "Wise",
    //         company: "Comveyer",
    //         employed: false
    //     },
    //     {
    //         firstName: "Nancy",
    //         lastName: "Waters",
    //         company: "Fuelton",
    //         employed: false
    //     }
    // ];






    $scope.generateReportFromClick = function (_key, _file) {

        //'Bogger_Tonnes\\RP_BoggerTonnes_AllTonnesByMineByTime.sql'
        _key = _key.replace(" ", "_");
        var fullFileName = _key + "\\" + _file;
        console.log(fullFileName);

        $scope.reportSQLFile = fullFileName;
        $scope.generateReport();
    }




    $scope.generateReport = function () {

        var data = [
            $scope.reportGenStartDate,
            $scope.reportGenEndDate,
            $scope.reportGenStartShift === true ? 1 : 2,
            $scope.reportGenEndShift === true ? 1 : 2,
            $scope.reportSQLFile,
        ];

        // Test Data
        //var data = ['20181010', '20181020', 1, 2, $scope.reportSQLFile];        

        var _data = { 'func': 0, 'date': data };
        var request = $http({
            method: 'POST',
            url: ServerInfo.URL_Reporting,
            data: _data
        })
        request.then(function (response) {
            //if ($rootScope.checkResponseError(response))
            //  return;

            console.log(response.data);

            if (response.data[0] == "No Result") {
                $scope.noResult = true;
                $scope.noResultMsg = "<h3><i class='fas fa-info-circle'></i> " + response.data[0] + "</h3><br/>";
                $scope.noResultMsg += "<h4>" + response.data[1] + "</h4><br/>";
                $scope.noResultMsg += "<h5>" + response.data[2] + "</h5><br/>";
                return;
            }



            // Header Row
            var data = response.data;
            var dataForDisplay = [];
            var header = data[0];

            for (var i = 1; i < data.length; i++) {
                var newRow = {};

                for (var j = 0; j < data[i].length; j++) {
                    var isDate = false;// (header[j].includes("Time"));
                    newRow[String(header[j])] = isDate ? (data[i][j]) : data[i][j];
                }
                dataForDisplay.push(newRow);
            }

            var columnDefs = [];
            //console.log(header);
            for (var i = 0; i < header.length; i++) {
                //if(header[i].includes("Time"))
                var isDate = (String(header[i]).includes("Time"));
                columnDefs.push({
                    field: String(header[i]),
                    cellClass: 'rCell',
                    headerCellClass: 'rHead',
                    type: isDate ? 'date' : '',
                    cellFilter: isDate ? 'date:\'yyyy-MM-dd\'' : ''
                    //cellFilter: (header[i].includes("Time")) ? 'date' : ''
                });
            }

            //console.log(columnDefs);
            //console.log(dataForDisplay);

            // Setup scope from response
            $scope.noResult = false;
            $scope.gridOptions.columnDefs = columnDefs;
            $scope.gridOptions.data = dataForDisplay;
            $scope.gridOptions.exporterCsvFilename = "pooo.csv";


        }, function (error) {
            $rootScope.processErrorResponse(error);
        });
    }



    $scope.getAvailableReports = function () {

        var _data = { 'func': 1 };
        var request = $http({
            method: 'POST',
            url: ServerInfo.URL_Reporting,
            data: _data
        })
        request.then(function (response) {

            //if ($rootScope.checkResponseError(response))
            //  return;

            console.log($scope.noResult);
            $scope.availableReports = response.data;

        }, function (error) {
            console.error(error);
        });
    }


    $scope.setupCalendars = function () {
        var minDate = ServerInfo.availableDates[ServerInfo.availableDates.length - 1];
        var maxDate = ServerInfo.availableDates[0];

        minDate = moment(minDate).format('YYYY-MM-DD').toString();
        maxDate = moment(maxDate).format('YYYY-MM-DD').toString();

        rangeStart = moment(maxDate).subtract(1, 'days').format('YYYY-MM-DD').toString();

        // Default to the last week
        $scope.reportGenStartDate = moment(maxDate).subtract(7, 'days').format('YYYYMMDD').toString();
        $scope.reportGenEndDate = moment(maxDate).format('YYYYMMDD').toString();

        flatpickr('.calendar', {
            enable: [
                {
                    from: minDate,
                    to: maxDate
                }
            ],
            altInput: true,
            //altFormat: "F j, Y",
            altFormat: "Y-m-d",
            dateFormat: "Y-m-d",
            mode: "range",
            defaultDate: [rangeStart, maxDate],
            // On Click of a new date
            onChange: function (selectedDates, dateStr, instance) {
                $scope.reportGenStartDate = moment(selectedDates[0]).format('YYYYMMDD').toString();
                $scope.reportGenEndDate = moment(selectedDates[1]).format('YYYYMMDD').toString();

                // console.log("_____________________");
                // console.log($scope.reportGenStartDate);
                // console.log($scope.reportGenEndDate);
                // console.log($scope.reportGenStartShift);
                // console.log($scope.reportGenEndShift);
            }
        });
    }






    $scope.$watch('$viewContentLoaded', function () {
        $timeout(function () {
            //$scope.reportSQLFile = 'Bogger_Tonnes\\RP_BoggerTonnes_AllTonnesByMineByTime.sql';
            //$scope.generateReport();
            $scope.getAvailableReports();
            $scope.setupCalendars();
        }, 50);
    });


    $rootScope.$on('newSiteDataSet', function () {
        $timeout(function () {
        }, 50);
    });


    $scope.$on('updateShift', function (event, data) {
        $timeout(function () {
        }, 10);
    });

});