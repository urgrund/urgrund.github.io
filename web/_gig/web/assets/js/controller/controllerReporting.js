
app.controller('Reporting', function ($scope, $http, $rootScope, $timeout, uiGridExporterService, uiGridExporterConstants) {


    // Details needed to 
    // send to server
    $scope.reportGenStartDate;
    $scope.reportGenEndDate;
    $scope.reportGenStartShift;
    $scope.reportGenEndShift;
    $scope.reportSQLFile;

    // List of available reports
    $scope.availableReports;

    // Message for when there is no result
    $scope.noResult = true;
    $scope.noResultMsg = '<h3><i class="fas fa-info-circle"></i> Click on a report file to view results...</h3>';


    //$scope.gridOptions = {};

    // $scope.gridOptions = {

    //     enableColumnResizing: true,
    //     enableAutoFitColumns: true,

    //     enableGridMenu: true,
    //     enableSelectAll: true,
    //     exporterCsvFilename: $scope.reportSQLFile,
    //     exporterPdfDefaultStyle: { fontSize: 9 },
    //     //exporterPdfTableStyle: { margin: [30, 30, 30, 30] },
    //     exporterPdfTableHeaderStyle: { fontSize: 10, bold: true, italics: true, color: 'red' },
    //     exporterPdfHeader: { text: "My Header", style: 'headerStyle' },
    //     exporterPdfFooter: function (currentPage, pageCount) {
    //         return {
    //             text: currentPage.toString()
    //                 + ' of ' + pageCount.toString()
    //                 + ' Report generated by Mine-Mage', style: 'footerStyle'
    //         };
    //     },
    //     exporterPdfCustomFormatter: function (docDefinition) {
    //         docDefinition.styles.headerStyle = { fontSize: 22, bold: true };
    //         docDefinition.styles.footerStyle = { fontSize: 10, bold: true };
    //         return docDefinition;
    //     },
    //     exporterPdfOrientation: 'portrait',
    //     exporterPdfPageSize: 'LETTER',
    //     exporterPdfMaxGridWidth: 500,
    //     exporterCsvLinkElement: angular.element(document.querySelectorAll(".custom-csv-link-location")),
    //     exporterExcelFilename: 'asdasdsad.xlsx',
    //     exporterExcelSheetName: 'Sheet1',
    //     onRegisterApi: function (gridApi) {
    //         $scope.gridApi = gridApi;
    //     }
    // };










    $scope.generateReportFromClick = function (_key, _file) {

        //'Bogger_Tonnes\\RP_BoggerTonnes_AllTonnesByMineByTime.sql'
        _key = _key.replace(" ", "_");
        var fullFileName = _key + "\\" + _file;
        console.log(fullFileName);

        $scope.reportSQLFile = fullFileName;
        $scope.generateReport();
    }




    $scope.generateReport = function () {

        var data = [
            $scope.reportGenStartDate,
            $scope.reportGenEndDate,
            $scope.reportGenStartShift === true ? 1 : 2,
            $scope.reportGenEndShift === true ? 1 : 2,
            $scope.reportSQLFile,
        ];

        // Test Data
        //var data = ['20181010', '20181020', 1, 2, $scope.reportSQLFile];        

        var _data = { 'func': 0, 'date': data };
        var request = $http({
            method: 'POST',
            url: ServerInfo.URL_Reporting,
            data: _data
        })
        request.then(function (response) {
            //if ($rootScope.checkResponseError(response))
            //  return;

            //console.log(response.data);


            if (response.data[0] == "No Result") {
                $scope.noResult = true;
                $scope.noResultMsg = "<h3><i class='fas fa-info-circle'></i> " + response.data[0] + "</h3><br/>";
                $scope.noResultMsg += "<h4>" + response.data[1] + "</h4><br/>";
                $scope.noResultMsg += "<h5>" + response.data[2] + "</h5><br/>";
                return;
            }

            SetTabulatorData(response.data);



            // // Header Row
            // var data = response.data;
            // var dataForDisplay = [];
            // var header = data[0];

            // for (var i = 1; i < data.length; i++) {
            //     var newRow = {};

            //     for (var j = 0; j < data[i].length; j++) {
            //         var isDate = false;// (header[j].includes("Time"));
            //         newRow[String(header[j])] = isDate ? (data[i][j]) : data[i][j];
            //     }
            //     dataForDisplay.push(newRow);
            // }

            // var columnDefs = [];
            // //console.log(header);
            // for (var i = 0; i < header.length; i++) {
            //     var isDate = (String(header[i]).includes("Time"));
            //     columnDefs.push({
            //         field: String(header[i]),
            //         cellClass: 'rCell',
            //         headerCellClass: 'rHead',
            //         type: isDate ? 'date' : '',
            //         cellFilter: isDate ? 'date:\'yyyy-MM-dd\'' : ''
            //     });
            // }

            // //console.log(columnDefs);
            // //console.log(dataForDisplay);

            // // Setup scope from response
            // $scope.noResult = false;
            // $scope.gridOptions.columnDefs = columnDefs;
            // $scope.gridOptions.data = dataForDisplay;
            // $scope.gridOptions.exporterCsvFilename = "pooo.csv";


        }, function (error) {
            $rootScope.processErrorResponse(error);
        });
    }



    $scope.getAvailableReports = function () {

        var _data = { 'func': 1 };
        var request = $http({
            method: 'POST',
            url: ServerInfo.URL_Reporting,
            data: _data
        })
        request.then(function (response) {

            //if ($rootScope.checkResponseError(response))
            //  return;

            console.log($scope.noResult);
            $scope.availableReports = response.data;

        }, function (error) {
            console.error(error);
        });
    }


    $scope.setupCalendars = function () {
        var minDate = ServerInfo.availableDates[ServerInfo.availableDates.length - 1];
        var maxDate = ServerInfo.availableDates[0];

        minDate = moment(minDate).format('YYYY-MM-DD').toString();
        maxDate = moment(maxDate).format('YYYY-MM-DD').toString();

        rangeStart = moment(maxDate).subtract(1, 'days').format('YYYY-MM-DD').toString();

        // Default to the last week
        $scope.reportGenStartDate = moment(maxDate).subtract(7, 'days').format('YYYYMMDD').toString();
        $scope.reportGenEndDate = moment(maxDate).format('YYYYMMDD').toString();

        flatpickr('.calendar', {
            enable: [
                {
                    from: minDate,
                    to: maxDate
                }
            ],
            altInput: true,
            //altFormat: "F j, Y",
            altFormat: "Y-m-d",
            dateFormat: "Y-m-d",
            mode: "range",
            defaultDate: [rangeStart, maxDate],
            // On Click of a new date
            onChange: function (selectedDates, dateStr, instance) {
                $scope.reportGenStartDate = moment(selectedDates[0]).format('YYYYMMDD').toString();
                $scope.reportGenEndDate = moment(selectedDates[1]).format('YYYYMMDD').toString();

                // console.log("_____________________");
                // console.log($scope.reportGenStartDate);
                // console.log($scope.reportGenEndDate);
                // console.log($scope.reportGenStartShift);
                // console.log($scope.reportGenEndShift);
            }
        });
    }






    $scope.$watch('$viewContentLoaded', function () {
        $timeout(function () {
            //$scope.reportSQLFile = 'Bogger_Tonnes\\RP_BoggerTonnes_AllTonnesByMineByTime.sql';
            //$scope.generateReport();
            $scope.getAvailableReports();
            $scope.setupCalendars();
        }, 200);
    });


    $rootScope.$on('newSiteDataSet', function () {
        $timeout(function () {
        }, 50);
    });


    $scope.$on('updateShift', function (event, data) {
        $timeout(function () {
        }, 10);
    });



    $scope.downloadAs = function (_format) {
        table.download(_format, "data.csv");
    }


    function SetTabulatorData(_data) {
        //console.log("Setting");

        tabledata = [];
        for (var i = 1; i < _data.length; i++) {
            var newRow = {};
            for (let j = 0; j < _data[0].length; j++) {
                newRow[_data[0][j]] = _data[i][j];
                // If it's a date
                if (_data[i][j] != null)
                    if (_data[i][j].date != undefined)
                        newRow[_data[0][j]] = _data[i][j].date;
            }
            tabledata.push(newRow);
        }
        //console.log(_data[1][3].date);

        var newColumns = []
        for (let i = 0; i < _data[0].length; i++) {
            var name = String(_data[0][i]);
            var newCol = { title: name, field: name };
            newColumns[i] = newCol;
        }
        //console.log(newColumns);
        //console.log(_data);


        table.setColumns(newColumns);
        table.setData(tabledata);
    }



    var tabledata = [
        { id: 1, name: "Oli Bob", age: "12", col: "red", dob: "" },
        { id: 2, name: "Mary May", age: "1", col: "blue", dob: "14/05/1982" },
        { id: 3, name: "Christine Lobowski", age: "42", col: "green", dob: "22/05/1982" },
        { id: 4, name: "Brendon Philips", age: "125", col: "orange", dob: "01/08/1980" },
        { id: 5, name: "Margret Marmajuke", age: "16", col: "yellow", dob: "31/01/1999" },
    ];

    var table = new Tabulator("#tabulator", {
        height: '9%', // set height of table (in CSS or here), this enables the Virtual DOM and improves render speed dramatically (can be any valid css height value)
        data: tabledata, //assign data to table
        layout: "fitColumns", //fit columns to width of table (optional)
        //layout: "fitDataFill",
        //layoutColumnsOnNewData: true,
        //autoColumns: true,
        columns: [ //Define Table Columns
            { title: "Name", field: "name", width: 150 },
            { title: "Age", field: "age", hozAlign: "left", formatter: "progress" },
            { title: "Favourite Color", field: "col" },
            { title: "Date Of Birth", field: "dob", sorter: "date", hozAlign: "center" },
        ],
        rowClick: function (e, row) { //trigger an alert message when the row is clicked
            //alert("Row " + row.getData().id + " Clicked!!!!");
        },
    });

});