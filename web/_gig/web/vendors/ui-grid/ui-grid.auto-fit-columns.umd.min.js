/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/ui-grid-auto-fit-columns@1.2.2/dist/ui-grid.auto-fit-columns.umd.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!function (e, t) { if ("object" == typeof exports && "object" == typeof module) module.exports = t(require("angular")); else if ("function" == typeof define && define.amd) define(["angular"], t); else { var r = "object" == typeof exports ? t(require("angular")) : t(e.angular); for (var i in r) ("object" == typeof exports ? exports : e)[i] = r[i] } }(window, function (e) { return function (e) { var t = {}; function r(i) { if (t[i]) return t[i].exports; var n = t[i] = { i: i, l: !1, exports: {} }; return e[i].call(n.exports, n, n.exports, r), n.l = !0, n.exports } return r.m = e, r.c = t, r.d = function (e, t, i) { r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: i }) }, r.r = function (e) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, r.t = function (e, t) { if (1 & t && (e = r(e)), 8 & t) return e; if (4 & t && "object" == typeof e && e && e.__esModule) return e; var i = Object.create(null); if (r.r(i), Object.defineProperty(i, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e) for (var n in e) r.d(i, n, function (t) { return e[t] }.bind(null, n)); return i }, r.n = function (e) { var t = e && e.__esModule ? function () { return e.default } : function () { return e }; return r.d(t, "a", t), t }, r.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, r.p = "", r(r.s = "./src/index.ts") }({ "./src/Measurer.ts": function (e, t, r) { "use strict"; r.r(t), r.d(t, "Measurer", function () { return i }); var i = function () { function e() { } return e.measureTextWidth = function (t, r) { var i = (e.canvas || (e.canvas = document.createElement("canvas"))).getContext("2d"); return i.font = r, i.measureText(t).width }, e.measureRoundedTextWidth = function (t, r) { var i = e.measureTextWidth(t, r); return Math.floor(i) + 1 }, e }() }, "./src/UiGridAutoFitColumnsDirective.ts": function (e, t, r) { "use strict"; function i(e) { return { replace: !0, priority: 0, require: "^uiGrid", scope: !1, compile: function () { return { pre: function (t, r, i, n) { e.initializeGrid(n.grid) } } } } } r.r(t), r.d(t, "UiGridAutoFitColumnsDirective", function () { return i }), i.$inject = ["uiGridAutoFitColumnsService"] }, "./src/UiGridAutoFitColumnsService.ts": function (e, t, r) { "use strict"; r.r(t), r.d(t, "UiGridAutoFitColumnsService", function () { return o }); var i = r("./src/Measurer.ts"), n = r("./src/UiGridMetrics.ts"), o = function () { function e(e) { this.$q = e, this.gridMetrics = new n.UiGridMetrics } return e.prototype.initializeGrid = function (t) { t.registerColumnBuilder(this.colAutoFitColumnBuilder.bind(this)), t.registerColumnsProcessor(this.columnsProcessor.bind(this), 60), e.defaultGridOptions(t.options) }, e.defaultGridOptions = function (e) { e.enableColumnAutoFit = !1 !== e.enableColumnAutoFit }, e.prototype.colAutoFitColumnBuilder = function (t, r, i) { return void 0 === t.enableColumnAutoFit && (e.isResizable(t) ? t.enableColumnAutoFit = i.enableColumnAutoFit : t.enableColumnAutoFit = !1), this.$q.all([]) }, e.isResizable = function (e) { return !e.hasOwnProperty("width") }, e.prototype.columnsProcessor = function (e, t) { var r = this; if (!t.length) return e; var n = {}; return e.forEach(function (e) { if (e.colDef.enableColumnAutoFit) { var o = e.field || e.name; n[o] = i.Measurer.measureRoundedTextWidth(e.displayName, r.gridMetrics.getHeaderFont()) + r.gridMetrics.getHeaderButtonsWidth(), t.forEach(function (t) { var u = t.grid.getCellDisplayValue(t, e), c = i.Measurer.measureRoundedTextWidth(u, r.gridMetrics.getCellFont()), d = c > 300 ? 300 : c; d > n[o] && (n[o] = d) }), e.colDef.width = n[o] + r.gridMetrics.getPadding() + r.gridMetrics.getBorder(), e.updateColumnDef(e.colDef, !1) } }), e }, e.$inject = ["$q", "$filter", "$parse"], e }() }, "./src/UiGridMetrics.ts": function (e, t, r) { "use strict"; r.r(t), r.d(t, "UiGridMetrics", function () { return n }); var i = r("angular"), n = function () { function e() { } return e.prototype.getHeaderFont = function () { if (this.headerFont) return this.headerFont; var t = document.querySelector(".ui-grid-header-cell .ui-grid-cell-contents"); if (!t) throw new Error("not found: .ui-grid-header-cell .ui-grid-cell-contents"); var r = getComputedStyle(t); return this.headerFont = e.getFontStringFrom(r), this.headerFont }, e.prototype.getCellFont = function () { if (this.cellFont) return this.cellFont; var t = document.querySelector(".ui-grid-cell > .ui-grid-cell-contents"); if (!t) { var r = document.createElement("div"); r.className = "ui-grid-cell-contents", r.style.cssFloat = "left", i.element(document.body).append(r); var n = getComputedStyle(r); return this.cellFont = e.getFontStringFrom(n), i.element(r).remove(), this.cellFont } var o = getComputedStyle(t); return this.cellFont = e.getFontStringFrom(o), this.cellFont }, e.prototype.getPadding = function () { if (this.padding) return this.padding; var e = document.querySelector(".ui-grid-header-cell .ui-grid-cell-contents"); if (!e) throw new Error("not found: .ui-grid-header-cell .ui-grid-cell-contents"); var t = getComputedStyle(e), r = t.paddingLeft, i = t.paddingRight; return this.padding = parseInt(r) + parseInt(i), this.padding }, e.prototype.getBorder = function () { if (this.border) return this.border; var e = document.querySelector(".ui-grid-header-cell"); if (!e) throw new Error("not found: .ui-grid-header-cell"); var t = getComputedStyle(e).borderRightWidth; return this.border = parseInt(t), this.border }, e.prototype.getHeaderButtonsWidth = function () { return 25 }, e.getFontStringFrom = function (e) { return e.fontStyle + " " + e.fontVariant + " " + e.fontWeight + " " + e.fontSize + " " + e.fontFamily }, e }() }, "./src/index.ts": function (e, t, r) { "use strict"; r.r(t); var i = r("angular"), n = r("./src/UiGridAutoFitColumnsService.ts"), o = r("./src/UiGridAutoFitColumnsDirective.ts"), u = r("./src/Measurer.ts"); r.d(t, "Measurer", function () { return u.Measurer }), r.d(t, "UiGridAutoFitColumnsDirective", function () { return o.UiGridAutoFitColumnsDirective }), r.d(t, "UiGridAutoFitColumnsService", function () { return n.UiGridAutoFitColumnsService }); var c = r("./src/UiGridMetrics.ts"); r.d(t, "UiGridMetrics", function () { return c.UiGridMetrics }), t.default = i.module("ui.grid.autoFitColumns", ["ui.grid"]).service("uiGridAutoFitColumnsService", n.UiGridAutoFitColumnsService).directive("uiGridAutoFitColumns", o.UiGridAutoFitColumnsDirective).name }, angular: function (t, r) { t.exports = e } }) });
//# sourceMappingURL=/sm/942b128a4344d7e4f00f873c589c63c750f9519b52d006d0bc95e4bb278285bf.map